iDesign


1)

==> Main.java

import java.util.*;

public class Main {
	public static void main(String args[]) throws Exception{
		//write your code here

		Scanner scanner = new Scanner(System.in);
        ArrayList<String> halls = new ArrayList<>();
        
        // Get the number of halls from the user
        System.out.println("Enter the number of halls:");
        int n = scanner.nextInt();
        scanner.nextLine();
        
        // Get the hall names from the user and store them in the ArrayList
        for (int i = 0; i < n; i++) {
            System.out.println("Enter the Hall Name " + (i+1));
            String hallName = scanner.nextLine();
            halls.add(hallName);
        }
        
        // Get the hall name to be searched from the user
        System.out.println("Enter the hall name to be searched:");
        String hallToSearch = scanner.nextLine();
        
        // Search for the hall in the ArrayList using contains() method
        if (halls.contains(hallToSearch)) {
            // If the hall is found, get its index using indexOf() method
            int position = halls.indexOf(hallToSearch);
            System.out.println(hallToSearch + " hall is found in the list at position " + position);
        } else {
            // If the hall is not found, print a message
            System.out.println(hallToSearch + " hall is not found");
        }
	}
}



2)

==> Main.java

import java.util.*;

public class Main {

	public static void main(String[] args) {
		// fill the code here

		Scanner scanner = new Scanner(System.in);
        Set<String> emailSet = new HashSet<>();

        while (true) {
            System.out.println("Enter Email address");
            String email = scanner.nextLine();
            emailSet.add(email);

            System.out.println("Do you want to Continue?(yes/no)");
            String input = scanner.nextLine();

            if (input.equals("no")) {
                break;
            }
        }

        System.out.println("Enter the email addresses to be searched separated by comma");
        String searchEmails = scanner.nextLine();

        String[] searchEmailsArray = searchEmails.split(",");

        Set<String> searchEmailsSet = new HashSet<>(Arrays.asList(searchEmailsArray));

        if (emailSet.containsAll(searchEmailsSet)) {
            System.out.println("Email addresses are present");
        } else {
            System.out.println("Email addresses are not present");
        }

        scanner.close();
	}

}



3)

==> Address.java

public class Address {
    //your code here

    private String addressLine1;
    private String addressLine2;
    private String city;
    private String state;
    private Integer pincode;

    public Address(String addressLine1, String addressLine2, String city, String state, Integer pincode) {
        this.addressLine1 = addressLine1;
        this.addressLine2 = addressLine2;
        this.city = city;
        this.state = state;
        this.pincode = pincode;
    }

    public String getAddressLine1() {
        return addressLine1;
    }

    public void setAddressLine1(String addressLine1) {
        this.addressLine1 = addressLine1;
    }

    public String getAddressLine2() {
        return addressLine2;
    }

    public void setAddressLine2(String addressLine2) {
        this.addressLine2 = addressLine2;
    }

    public String getCity() {
        return city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    public String getState() {
        return state;
    }

    public void setState(String state) {
        this.state = state;
    }

    public Integer getPincode() {
        return pincode;
    }

    public void setPincode(Integer pincode) {
        this.pincode = pincode;
    }


}


==> Main.java

import java.util.*;

public class Main {

	public static void main(String[] args){
		//Your code here

        Scanner scanner = new Scanner(System.in);

        System.out.println("Enter the number of address");
        int numAddresses = scanner.nextInt();
        scanner.nextLine();

        Map<String, List<Address>> multiMap = new HashMap<>();

        for (int i = 0; i < numAddresses; i++) {
            System.out.println("Enter the address " + (i+1) + " detail");
            String[] addressDetails = scanner.nextLine().split(",");
            String addressLine1 = addressDetails[0];
            String addressLine2 = addressDetails[1];
            String city = addressDetails[2];
            String state = addressDetails[3];
            Integer pincode = Integer.parseInt(addressDetails[4].trim());

            Address address = new Address(addressLine1, addressLine2, city, state, pincode);

            if (multiMap.containsKey(city)) {
                List<Address> addressList = multiMap.get(city);
                addressList.add(address);
            } else {
                List<Address> addressList = new ArrayList<>();
                addressList.add(address);
                multiMap.put(city, addressList);
            }
        }

        System.out.println("Enter the city to be searched");
        String searchCity = scanner.nextLine();

        List<Address> addresses = multiMap.get(searchCity);
        if (addresses == null) {
            System.out.println("Searched city not found");
        } else {
            System.out.printf("%-15s %-15s %-15s %-15s %s\n", "Line 1", "Line 2", "City", "State", "Pincode");
            for (Address address : addresses) {
                System.out.printf("%-15s %-15s %-15s %-15s %d\n", address.getAddressLine1(),
                        address.getAddressLine2(), address.getCity(), address.getState(), address.getPincode());
            }
        }
	}

}









iAssess


1) 

==> User.java

import java.util.*;

public class User implements Comparable<User> {
	private String username;
	private String bankname;
	
	public User(){
	}

	public User(String username, String bankname) {
		super();
		this.username = username;
		this.bankname = bankname;
	}

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getBankname() {
		return bankname;
	}

	public void setBankname(String bankname) {
		this.bankname = bankname;
	}
	
	//fill the code here

	@Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        User user = (User) o;
        return Objects.equals(username, user.username);
    }

    @Override
    public int hashCode() {
        return Objects.hash(username);
    }

	@Override
    public int compareTo(User o) {
        return this.username.compareTo(o.getUsername());
    }
}



==> Main.java

import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        // create set of users
        Set<User> users = new HashSet<>();

        // take user input for number of users
        System.out.println("Enter number of users:");
        int n = sc.nextInt();
         sc.nextLine(); // consume newline character

        // take user input for each user and add to set
        for (int i = 1; i <= n; i++) {
            System.out.println("Enter details of user" + i);
            System.out.println("Username:");
            String username = sc.nextLine();
            System.out.println("Bank name:");
            String bankname = sc.nextLine();
            User user = new User(username, bankname);
            users.add(user);
        }

        // create list of active users from CSV input
        System.out.println("Enter username(Expire in one month) seperated by comma");
        String[] activeUsernames = sc.next().split(",");
        List<User> activeUsers = new ArrayList<>();
        for (String username : activeUsernames) {
            User user = new User(username.trim(), null);
            activeUsers.add(user);
        }

        // remove inactive users from set using retainAll method
        users.retainAll(activeUsers);

        // sort users by username
        List<User> sortedUsers = new ArrayList<>(users);
        Collections.sort(sortedUsers);

        // print active users
        System.out.println("Users going to expire within a month");
        for (int i = 0; i < sortedUsers.size(); i++) {
            User user = sortedUsers.get(i);
            System.out.println("User " + (i+1));
            System.out.println("User Name = " + user.getUsername());
            System.out.println("Bank Name = " + user.getBankname());
        }

        sc.close();
    }
}




2)   

==> User.java

import java.util.*;

class User {
    private String name;
    private String contactNumber;
    private String userName;
    private String email;

    public User() {}

    public User(String name, String contactNumber, String userName, String email) {
        this.name = name;
        this.contactNumber = contactNumber;
        this.userName = userName;
        this.email = email;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getContactNumber() {
        return contactNumber;
    }

    public void setContactNumber(String contactNumber) {
        this.contactNumber = contactNumber;
    }

    public String getUserName() {
        return userName;
    }

    public void setUserName(String userName) {
        this.userName = userName;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public void display() {
        System.out.printf("%-20s%-20s%-20s%-20s\n", name, contactNumber, userName, email);
    }
}


==> UserBO.java

import java.util.*;

public class UserBO extends ArrayList<User>{
    
    public static UserBO getList(){
		UserBO u=new UserBO();
		u.add(new User("mohan Raja","9874563210","mohan","mohan@abc.in"));
		u.add(new User("arjun Ravi","4324237","arjun","arjun@abc.in"));
		u.add(new User("Arun kumar","9845671230","arun","arun@abc.in"));
		u.add(new User("prakash raj","7548921445","prakash","raj@abc.in"));
		return u;
	}
    //Your code here

       public void removeUser(int n1, int n2) {
        if (n1 > n2 || n1 < 0 || n2 >= this.size()) {
            return;
        }
        this.removeRange(n1, n2);
    }
}


==> Main.java

import java.util.*;

public class Main{
    public static void main(String[] args){
		//Your code here
        Scanner scanner = new Scanner(System.in);
        System.out.println("Enter the number of User details to be added");
        int n = scanner.nextInt();
        scanner.nextLine();

        UserBO userList = new  UserBO();
        UserBO predefinedList =  UserBO.getList();

	  userList.addAll(predefinedList);

        for (int i = 1; i <= n; i++) {
            System.out.printf("Enter the user %d detail in csv format\n", i);
            String[] userDetails = scanner.nextLine().split(",");
            userList.add(new User(userDetails[0].trim(), userDetails[1].trim(), userDetails[2].trim(), userDetails[3].trim()));
        }

        System.out.printf("%-20s%-20s%-20s%-20s\n", "Name", "Contact Number", "Username", "Email");
         for (User user : userList) {
            user.display();
        }

        System.out.println("Enter the range to be removed from array list");
        int n1 = scanner.nextInt();
        int n2 = scanner.nextInt();
        scanner.close();

        userList.removeUser(n1, n2);

        System.out.printf("%-20s%-20s%-20s%-20s\n", "Name", "Contact Number", "Username", "Email");
        for (User user : userList) {
            user.display();
        }
	}
}




3)


==> Main.java

import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        System.out.println("Enter the number of address:");
        int n = sc.nextInt();
        sc.nextLine(); // consume the newline character after reading integer input

        // create the map of maps
        Map<String, Map<String, Integer>> mapOfMaps = new TreeMap<>();

        for (int i = 0; i < n; i++) {
            System.out.println("Enter the address:");
            String[] address = sc.nextLine().split(",");

            String area = address[0];
            String city = address[1];
            String state = address[2];
            String pincode = address[3];

            // update the map of maps with the current address
            if (!mapOfMaps.containsKey(state)) {
                mapOfMaps.put(state, new TreeMap<>());
            }
            Map<String, Integer> cityMap = mapOfMaps.get(state);
            if (!cityMap.containsKey(city)) {
                cityMap.put(city, 0);
            }
            cityMap.put(city, cityMap.get(city) + 1);
        }

        // print the output
        System.out.println("Number of entries in city/state wise:\n");

        for (String state : mapOfMaps.keySet()) {
            System.out.println("State:" + state);
            Map<String, Integer> cityMap = mapOfMaps.get(state);
            for (String city : cityMap.keySet()) {
                System.out.println("City:" + city + " Count:" + cityMap.get(city));
            }
            System.out.println();
        }
    }
}




